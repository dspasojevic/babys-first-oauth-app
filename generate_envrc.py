import subprocess
from typing import TextIO


def add_var(name: str, value: str, f: TextIO):
    f.write(f"export {name}={value}\n")


with open(".envrc", "w") as f:
    f.write("source_up\n")
    add_var("GRAPHQL_ADMIN_SECRET", "secret", f)
    add_var("USER_ID", "john_doe", f)
    add_var("TOKEN_AES_KEY", "05F0OX9SZY9EGK6T7196IBDKEC5CHX7D", f)
    add_var("CLIENT_ID", "flask_social", f)
    add_var("GRAPHQL_URI", "http://burger-joint-graphql:8080/v1/graphql", f)
    add_var("BURGER_RESOURCES_BASE_URL", "http://burger.local:3000", f)
    add_var("SOCIAL_CLIENT_BASE_URL", "http://social.local:5000", f)
    add_var("BURGER_AUTH_JWT_SECRET", "secret", f)
    add_var(
        "BURGER_AUTH_JWT_PUB_KEY",
        "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF0d1pjT3R4WTFTbUI4aFlUUDA1RQoxZy9PaUFGT0V4N25HYnZVaVZnOS9ONGt4UDJNQ0JGajB4bUR2cGIwQTB3MUhQTEpzcjlHVkhtR0REcEhnbzQxCmdrMS9yQ25qYVRFdFhQWTVnZVdDS1Z0bFE0Yms0ZWdNNU8yNjZUK3NzYW5QbzZQQklNdVF2SDFYNVJ3cGZvZlkKbkkrUHBubnd2cHJEVkdNdlFqNzNMaW9wZ1RVc1VxVjg5bUluK0c2QTQzVHlFYi9PZ0ZySmxZY2dPZDVtekR3NQpPSUJseVduemhVZmVMUXR0YXBQdkw1NzBMV3ZkcUp0aDEyM2NhWWlCWUhTandVc0NLTXJVSnhvUGRhSlFvT1NSCnEvTnVHTitWTisxUXFPNVd2bDRhd09NNi9EQlFYZ1pweU5GMm94b2ZZMUx2S0N4NXdPOTBUZUNKdUdOVzUybWgKL2ltazlxaTJQejN5Mi8zdEE5TGlWOElnMFhmdWh1OHlSL2I2R0JNT1ZFUG52ZnBMV2ZJbytkS0ZDYndIY3J0KwpRNVhBeDNsMlVWZ3hLUEQxYitGeVlsQWVKbEpjeGhEL2ZqYW1DMXkxbTJMNzdZaVM3OVREazgrZHZNZzUxZzFyCjZFRG8rZm1PaTVVNUdjekpzcUp4anRGZ0tmTGdLNzdKL2IwWHpZM2pWcEdFdG1lLzNRdk45ZHIwYTFpRXV4bG4KT3g2WjFEOFVJVGRRTUM1RW85UlpmbzFtZm1BZjRWUFdmQUs1ZFZmcDNGOGpxdFRQN2wzUFNINDNUN29JL1ljWgpXZGdzMVMwdXFHbVVkd0hnRURhakZIcEhNY3NLUS9UU0c4eXUzeUNEWm9Qb1dHOXZOTHJINVg4NHJTRVV6ZTltCmRVc0xuTk8xekdwSzN6QWlZRHpCZ2VVQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=",
        f,
    )
    add_var(
        "BURGER_AUTH_JWT_PRIVATE_KEY",
        "LS0tLS1CRUdJTiBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQpNSUlKclRCWEJna3Foa2lHOXcwQkJRMHdTakFwQmdrcWhraUc5dzBCQlF3d0hBUUlyNnJ6TTlYbEdPQUNBZ2dBCk1Bd0dDQ3FHU0liM0RRSUpCUUF3SFFZSllJWklBV1VEQkFFcUJCREtBNTJtNCs3UWdES05iZnhCSmhZNUJJSUoKVURtRjFxU2M1RW1CbEQ4aXJSZndCME50Yys5Tk54TUlNVXZEMjF1RVV5SnkySFA2ekpNc013N0t6TCtDai80Mwo5SE1LUVVUZUVNTWozS0F0dEN2TWFnbWNoTWRXYlVwRkhjR0NSdTRRQ0s1dFNVMnNrSC9DdmtzUmVVM2N1RzBmClZaTjRaeld6akhRdWhqbGFjdFZKOFVoL3p6cm9WTHJJSlpSbFJkMXJiTlJhMmw5cHJBNXBGK2pYQktjdVlDQUsKZjVyN3lxZzVpZGtWeWlnd1Zod2o0MlhHVzljQ3BBblFCZ2VOTzhtTTZJSVA5R3RlTDhqbFlPR1NnQUVNVjVUeQp0dHg3V2JncldwN2FkVzVQVEdWc1VnZTd2d2xjd2VIM0lqaXBtaUQ1aExGMnkwYXUzSTdxMnJqb0VmdjBSaUVQClk5b05HV240Z3ZmY0NWWStBTjZYUVR6SUhWWG0vaWhzaFFQSUdCZkwrMU5adVR6M0wwZlNpS3cxL3BYblo1djQKMzdwODF4UTZ4R0k5WHREZDZyNEp4K25SRGovbWNwMmwwRVdCSGlNTG5rR2Jsd0FBOGlocEp3UHFSbm15Qmc2Mgo3d3pPSEFWUWk2K201eG15alVNL2x6cFV1V25rdUxqcTNUYVJyODVuWG84VGxoT21jbVgxdUs5bWYvTUFzNE9wCmJXT0dyVW9WV3NUbXdmd1VBVzAxc2lFRHZ1d3NXTHB2U2k3WDcxemFaSnU5L1c3Z000SGtSSWhvY0czY3dvUmoKRm5icktKR0Myek9zdzZ1REdYdE1jUHJrWmplYXlnR1cyUFdDZXF2WmFlQjJDcFNveDMreW5ZN2F2aVdUaTUzbAo0OHJtckNkWFNHRDBoQ1lBd2VqcU5DYjEvSXc5RlNWSG42NjYwYlN3MGRld0k5R0hIMW5zbm92emQ0bU0yNUdOCkZBY0Y4djEyRTdzTU9BTGlEUVpVc1dHVmhYeERReEozc0RzVXNkcmloaUpqWDVWVGdTeTB0dEJ5VENYeUdJOFkKTzNIUlI0YXloWnVNWVNBOSs3TUdNTFg5cDcyQzNCdnJFMmx6ZVBhMTVHRnhBdVF0OEplWnFqVldEU2ZDRU1kTgpncTFwbU1SL1dyMnRJMFN0ZHI4NUdWYTZjU2dQRm5pN0srUStmdzhsMVVrMGFaWnB1UlJ4aU5yUEpZWUVEanlhCnVkTDAwUmljdWhqKzBJQTBrc21URXdzYTVrUFIwcGZUaVlZQ0JsU3NmSHlDVmUydi9SSUdWZWpoM3piTCtUd1MKMmVRSEdVRVFpdnlRdGxhWWUvWHdJcXdGL1hxTWVadGpmWGdCU3RNaG8zbmZkMDZma0dzNG9xRktoVUVXZHFyTwo5UGJwNHFqMldNdjAwOGRNeTNaeDhIcWQzYzZ0REZ6VmZmMUlEV1hqcXRjWFNlQUhOazZha3pGQlhNc2FXOXFJCnUxUGhkZkxad2NZbGY0WVFaMTUrdklrS1FLS0h3OW9IdUlyTlRqcmN3RGxHMW9BYXc2Y3ZSVWRmdGtQRHdFYnMKdjcxL2I5YUo5WEI4NWx0WVQvRVNvdDkrYnR4dm4rRWVremx5bVNXK1RFejlUMjBpN29nRCtSQzNMMjBNTnVabworR2poQ0hoUFp0U3ZxdjZIOEo0YUlRWkhJUC9xQTk5d080Z09SUnArUVFiWFhST3pPU2FLY3h1eW9jOFhxWjRqCmlhRmErbEpqUHRBcm9KYWI4SmFSdDN1dlQvV0FWSVpXNTd4OFRmdHVuZEpjK2pFa2llSVFTL21FQjV1dHFmNWcKWnI5c2FPYThwNm81QTB3Q0FhUldBNmVtZkdDQUVqQkx6RGREenliaUI0MTYyVGJZRHpCdzYzQlJnZHBnaU82QwpLK0RVZDJiT3NJVFNxSTF2Znovcm5GUTJkMU9ZWHpGSm5rUXBzeEI3eUoyN0JEQ1dIM2ZmNWR1ZitLU2FMSzZOCkdlaGJPeCttdnZjRWw0L29wV0FpRzJsRVFCNlpvcU5mdEVUNWVSYTN4SW1NRTdEbjYzZkx5WndpL0hwTGJTc1IKaG40TStBbHp4WlhDOVJWaURuSEg1MGpnTXFGaGRDaEhLNURQeldtdkhER21SWEdFdW9xZnNmeEtFOURHcng5RwpRaHFCTEdUTnNrSk16VWYrZFZOVFd2THVic3RXNWRQamU2OTVlRndQaGVRSmVBMWQzNXp3QVY3WlNxR0hZN1NSClB4SzZwUWQ1TjZwOTh5NUtYaFEweVBpbWZ4QVprTWtMdE1sT09GOTV0K01CWVo0c0xuaE1kMENkUXEzRlFjcWwKRU5aa1VMRWdCYVE3MysyV1F3NkhWaCt6Ynd4LyttbVlPN2g4UWNYQ0puRlpXamk0Mk5GdEErb3hvZnczQUxueApGN3AzMjBDVkVON2NaMkpJVUg4UTJna284VTR1aU4yNFVGV2x0cUNXZ3dqNnBSMkV6WnlaOFl4QjBZN1FmNU9XCjJIaUNSMVFPMGhLNzJiYzRaRHBIc0x1bmxkVEZ3WklvTjlncWp2MDFuMXlxcUIxaUpQbmEya3ZCRTB2TWVZVnEKeGJSSGtZVG11NTJyYzh4ODUrZHBBK3RzcklJM2RyZFFpNGJZV1I4U2JOcngvRnNtNFhpM0lmV2haUGZoaUJZaQpaZXdGSFdTeEFnMWh0TEhPOVBnTVBldXRJWVM2VlFEaEdrTEE3Z3l2Wk1hb3ZoRjlPdDRZbVNqbEdBbGlHV2pNCmFWYjR0UzBNUWVyYnlVY3JicWkxQ3hYSEFQMFBkVmlCUUZXQ1RJMzhxZVpMQ1JJQnJmNnU4VVFxQ0RUUFhmcFIKMWdLSVVPbDM3Z3F2V1pQZkltZWUxVGQ2WmhkTEJpeXEydGhCdWpFNWYzTnhmbjdnSjBVei96N1ZEVVFwMW1Ibgo4dXRCZGpYbnNsZ0RMdWl4dGFsdkFQcE9SK0Voa005aExGRDBlcjg3VVUwQzE0bmlZTng0Z2R3dERCVU5PNWJZCldqZUZXM3hyVVF6YXArYzBwRVdhc2xFTk1uQnlLZUc2NnR5OCs5TWY2QXF4Q1N2Z2pDVlM5cmFsK2ZOL3NjM1YKcUV4SjEyZUlNSXk4WGtTci8zQVV3anhTa001d1FFZGxLWHRRRk8rZGhWTUsyR2syT1dOQjdQdjZkQzJ5eXRRYgpLZmxabEI1UDlaU2FnVmR6YzluT0VVNkg1Tm5XOUNocXh4QjlCUk9XczBMb0JsNUZjbU1CY29NR2pybzhFUVpWCjVnUUxaaGtYNUVzNzhoYmFVVXcxeW5GZk5HSTEvRXdqYjV4Y0k0WExmMHlURkhrNndaUUlRSWY2ZlJBaWlRaFkKZ0xYaXQ5dWR0YjZOWTRXR09EM1hJNkVWQkx0Q2pVdHhIRWg3dU9lMTRUZngxUVhqMmo2eHdDTU9MbkF2eG92UgpVeFZRQUIxU3ZnSlZNcVVSSmVtSmJQRnpzb3V4VUFIV3FmS0VVcWJVVnFJNWZLUE5kM3VpdjBKV2dNSEs3L2tECkpZYnRYTWkvR2sreVU4SkhNV2Evb05LdEFQUFNETWF6NmlvTWtmK0VjWmRPbGF3MFdoWVFQMHFuWjU0TWE2RzUKdEJObnZKUVgrSjBZNmFIaURiSnoxWVhDYUNReDZOK3FhMjY4QmVmanp3ZGtYbjNHc0Zpb2kyd3pLSEY2bkUvdgp6SzluODV5Y21VSUdWOXl2Vmd6TkF2RFNRT1pQeGpwWm1FazVLNGhhMG1sVUpKZmpydVdyWm9qZlE0M01jaVh5ClB2L3c1QVpSMS9udWNQcHhXV3V1UjNjdjNTNkRPZXhudjlGdWNvZ2FzcHVTUkt3Tk93QzB0Njc2TEFGZkMrNTIKbEl1b1NWcWhLamd2VjNqZHc4VmExS1pycnFZcnJxNzVrTjFjc3RKODR5VWtHaFlsQzhoaDJrNlNKZW9ZaEZISgpWRTQ2QjVvUXZBZUlob1d0UWtLOS92NGxwTU5SYTRxbW1ESm01QWVSL3dic25tQUVOcVkzV1NHWHg4d0R1UXFICk5Mc25Ka3A2K2hMNmVCUVJIdldSZkxmUTRGdEh0dGNFRU15SGdOYlRJendVWTVkcEpLVHNZNG5QNklyRGZTTU0KMUVLYUxPS0hPRlc4YSttWDRTUGRTOVJLSWtZOUdFd21XWG1jQVNCSjNVOUZlMXE5MHFicjVLQVNGb0licE1STgpkaTVES1hGYUVPTUluQ0tnWGZBdHhXUmFNYWFhRTVxVjBQMWs2YXBkQktnMwotLS0tLUVORCBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQo=",
        f,
    )

subprocess.run(["direnv", "allow"])
